// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "DcAgent.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/transport/TSocket.h>
#include <thrift/transport/TBufferTransports.h>
#include <iostream>
#include <sstream>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;


using namespace  ::dc;
using namespace  ::std;


int main(int argc, char **argv) {
	if(argc < 3){
		printf("Usage: %s ip-address command ...\n",argv[0]);
		return -1;
	}

	ostringstream command,address;
	address << argv[1];
	if(argc > 2){
		command << argv[2];
		for(int i=3;i < argc;i++){
			command << " " << argv[i];
		}
	}

	boost::shared_ptr<TSocket> socket(new TSocket(address.str().c_str(),9090));
	boost::shared_ptr<TTransport> transport(new TBufferedTransport(socket));
	boost::shared_ptr<TProtocol> protocol(new TBinaryProtocol(transport));

	DcAgentClient client(protocol);
	string output;

	transport->open();

	client.run(output,command.str());
	cout << output ;

	transport->close();
	return 0;
}


